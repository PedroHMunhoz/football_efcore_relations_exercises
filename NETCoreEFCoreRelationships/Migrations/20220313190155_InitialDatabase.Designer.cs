// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NETCoreEFCoreRelationships.DAO;

namespace NETCoreEFCoreRelationships.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220313190155_InitialDatabase")]
    partial class InitialDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("NETCoreEFCoreRelationships.Model.Championship", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FederationID")
                        .HasColumnType("int")
                        .HasColumnName("federationid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("ID")
                        .HasName("pk_championship");

                    b.HasIndex("FederationID")
                        .HasDatabaseName("ix_championship_federationid");

                    b.ToTable("championship");
                });

            modelBuilder.Entity("NETCoreEFCoreRelationships.Model.Division", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChampionshipID")
                        .HasColumnType("int")
                        .HasColumnName("championshipid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("ID")
                        .HasName("pk_division");

                    b.HasIndex("ChampionshipID")
                        .HasDatabaseName("ix_division_championshipid");

                    b.ToTable("division");
                });

            modelBuilder.Entity("NETCoreEFCoreRelationships.Model.Federation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("ID")
                        .HasName("pk_federation");

                    b.ToTable("federation");
                });

            modelBuilder.Entity("NETCoreEFCoreRelationships.Model.Team", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DivisionID")
                        .HasColumnType("int")
                        .HasColumnName("divisionid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("ID")
                        .HasName("pk_team");

                    b.HasIndex("DivisionID")
                        .HasDatabaseName("ix_team_divisionid");

                    b.ToTable("team");
                });

            modelBuilder.Entity("NETCoreEFCoreRelationships.Model.Championship", b =>
                {
                    b.HasOne("NETCoreEFCoreRelationships.Model.Federation", "Federation")
                        .WithMany("LstChampionship")
                        .HasForeignKey("FederationID")
                        .HasConstraintName("fk_championship_federation_federationid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Federation");
                });

            modelBuilder.Entity("NETCoreEFCoreRelationships.Model.Division", b =>
                {
                    b.HasOne("NETCoreEFCoreRelationships.Model.Championship", "Championship")
                        .WithMany("DivisionList")
                        .HasForeignKey("ChampionshipID")
                        .HasConstraintName("fk_division_championship_championshipid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Championship");
                });

            modelBuilder.Entity("NETCoreEFCoreRelationships.Model.Team", b =>
                {
                    b.HasOne("NETCoreEFCoreRelationships.Model.Division", "Division")
                        .WithMany("LstTeam")
                        .HasForeignKey("DivisionID")
                        .HasConstraintName("fk_team_division_divisionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");
                });

            modelBuilder.Entity("NETCoreEFCoreRelationships.Model.Championship", b =>
                {
                    b.Navigation("DivisionList");
                });

            modelBuilder.Entity("NETCoreEFCoreRelationships.Model.Division", b =>
                {
                    b.Navigation("LstTeam");
                });

            modelBuilder.Entity("NETCoreEFCoreRelationships.Model.Federation", b =>
                {
                    b.Navigation("LstChampionship");
                });
#pragma warning restore 612, 618
        }
    }
}
